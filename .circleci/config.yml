version: 2.1

orbs:
  python: circleci/python@2.1.1
  heroku: circleci/heroku@2.0.0

jobs:
  build_and_test:
    docker:
      - image: cimg/python:3.12.0
    
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pipenv
      - run:
          name: Run tests
          command: 
            mkdir test-results && pipenv run pytest
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  build-and-push-docker-image:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: build and push docker image
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$TAG --build-arg SECRET_KEY=${SECRET_KEY} --build-arg DSN=${DSN} .
            #docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$TAG .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/$IMAGE_NAME:$TAG
  
  deploy_on_heroku:
    docker:
      - image: cimg/python:3.12.0
    
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and push Docker image to Heroku
          command: |
           sudo curl https://cli-assets.heroku.com/install.sh | sh
           HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set SECRET_KEY=$SECRET_KEY -a $HEROKU_APP_NAME
           HEROKU_API_KEY=${HEROKU_TOKEN} heroku config:set DSN=$DSN -a $HEROKU_APP_NAME
           HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
           HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a $HEROKU_APP_NAME web
           HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a $HEROKU_APP_NAME web
 

workflows:
  main:
    jobs:
      - build_and_test
      - build-and-push-docker-image:
          requires:
              - build_and_test
          filters:
            branches:
              only: main
      - deploy_on_heroku:
          requires:
            - build-and-push-docker-image
          filters:
            branches:
              only: main